{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","document","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bcab3eaa.chunk.js","sourcesContent":[" import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID \n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n               data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n               data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount( (prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input \n                    name=\"email\" \n                    type=\"email\" \n                    placeholder=\"Email\"\n                    required \n                    value={email} \n                    onChange={onChange}\n                />\n                <input \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required\n                    value={password}\n                    onChange={onChange}\n                />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n                <div>{error}</div>\n            </form>\n            <span onClick={toggleAccount}>\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\n\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div>\n            <AuthForm/>\n            <div>\n                <button onClick={onSocialClick} name=\"google\">\n                    Continue with Google\n                </button>\n                <button onClick={onSocialClick} name=\"github\">\n                    Continue with Github\n                </button>\n            </div>\n        </div>\n    )\n} \n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\")\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n        setEditing(false);\n    }\n    \n    return (\n        <div>\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit}>\n                        <input onChange={onChange} value={newNweet} required/>\n                        <input type=\"submit\" value=\"Update Nweet\"/>\n                    </form>\n                    <button onClick={toggleEditing}>Cancle</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && (\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\n                        )}\n                        {isOwner && (\n                            <>\n                                <button onClick={onDeleteClick}>Delete Nweet</button>\n                                <button onClick={toggleEditing}>Edit Nweet</button>\n                            </>\n                        )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport {v4 as uuidv4} from \"uuid\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        reader.readAsDataURL(theFile);\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input \n                value={nweet} \n                onChange={onChange} \n                type=\"text\" \n                placeholder=\"What's on your mind?\" \n                maxLength={120}\n            />\n            <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n            <input type=\"submit\" value=\"Nweet\" />\n            {attachment && (\n                <div>\n                    <img src={attachment} width=\"50px\" height=\"50px\"/>\n                    <button onClick={onClearAttachment}>Clear</button>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\n\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    \n    const [nweets, setNweets] = useState([]);\n    \n    \n\n    useEffect( () => {\n        dbService.collection(\"nweets\").onSnapshot( (snapshot) => {\n            const newArray = snapshot.docs.map( (document) => ({\n                id: document.id,\n                ...document.data(),\n            }));\n            setNweets(newArray);\n        });\n    }, []);\n\n    \n\n    return (\n        <>\n            <NweetFactory userObj={userObj} />\n            <div>\n                {nweets.map( (nweet) => (\n                    <Nweet \n                        key={nweet.id} \n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({displayName: newDisplayName});\n            refreshUser();\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} />\n                <input type=\"submit\" value=\"Update Profile\"/>\n            </form>\n            <button onClick={onLogOutClick}>Log Out</button>\n        </>\n    )\n} \n\nexport default Profile;","import { Link } from \"react-router-dom\";\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul>\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n                </li>\n            </ul>\n        </nav>\n    )\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\"\nimport Profile from \"routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect( () => {\n    authService.onAuthStateChanged( (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n          <AppRouter \n            isLoggedIn={Boolean(userObj)} \n            userObj={userObj} \n            refreshUser={refreshUser}\n          /> \n        ) : (\n            \"initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}