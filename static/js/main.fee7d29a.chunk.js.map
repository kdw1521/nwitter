{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","REACT_APP_APP_ID","firebase","initializeApp","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fee7d29a.chunk.js","sourcesContent":[" import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/storage\"\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID \n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { useState } from \"react\";\nimport { authService } from \"fbase\";\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n    const [error, setError] = useState(\"\");\n\n    const onChange = (event) => {\n        const {\n            target: {name, value},\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n               data = await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n               data = await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    const toggleAccount = () => setNewAccount( (prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input \n                    name=\"email\" \n                    type=\"email\" \n                    placeholder=\"Email\"\n                    required \n                    value={email} \n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input \n                    name=\"password\" \n                    type=\"password\" \n                    placeholder=\"Password\" \n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input \n                    type=\"submit\" \n                    value={newAccount ? \"Create Account\" : \"Log In\"} \n                    className=\"authInput authSubmit\"\n                />\n                <div>{error && <span className=\"authError\">{error}</span>}</div>\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    )\n}\n\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport AuthForm from \"components/AuthForm\";\nimport { authService, firebaseInstance } from \"fbase\";\n\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        const data = await authService.signInWithPopup(provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{marginBottom: 30}}\n            />\n            <AuthForm/>\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    )\n} \n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentUrl !== \"\")\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({text: newNweet});\n        setEditing(false);\n    }\n    \n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input \n                            onChange={onChange} \n                            value={newNweet} \n                            required\n                            placeholder=\"Edit your mind\"\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                        {nweetObj.attachmentUrl && (\n                            <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\"/>\n                        )}\n                        {isOwner && (\n                            <div className=\"nweet__actions\">\n                                <span onClick={onDeleteClick}>\n                                    <FontAwesomeIcon icon={faTrash} />\n                                </span>\n                                <span onClick={toggleEditing}>\n                                    <FontAwesomeIcon icon={faPencilAlt} />\n                                </span>\n                            </div>\n                        )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport {v4 as uuidv4} from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentUrl = await response.ref.getDownloadURL();\n        }\n\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: {value},\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    }\n\n    const onClearAttachment = () => setAttachment(\"\");\n\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input \n                    className=\"factoryInput__input\"\n                    value={nweet} \n                    onChange={onChange} \n                    type=\"text\" \n                    placeholder=\"What's on your mind?\" \n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input \n                id=\"attach-file\"\n                type=\"file\" \n                accept=\"image/*\" \n                onChange={onFileChange} \n                style={{opacity: 0,}}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img src={attachment} style={{backgroundImage: attachment}} />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    )\n}\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\n\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({userObj}) => {\n    \n    const [nweets, setNweets] = useState([]);\n    \n    \n\n    useEffect( () => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot( (snapshot) => {\n                const newArray = snapshot.docs.map( (document) => ({\n                    id: document.id,\n                    ...document.data(),\n                }));\n                setNweets(newArray);\n            });\n    }, []);\n\n    \n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{marginTop: 30}}>\n                {nweets.map( (nweet) => (\n                    <Nweet \n                        key={nweet.id} \n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import { authService, dbService } from \"fbase\";\nimport { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    const history = useHistory();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    }\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({displayName: newDisplayName});\n            refreshUser();\n        }\n    }\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input \n                    type=\"text\" \n                    placeholder=\"Display name\" \n                    onChange={onChange} \n                    value={newDisplayName} \n                    autoFocus\n                    className=\"formInput\"\n                />\n                <input \n                    type=\"submit\" \n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    )\n} \n\nexport default Profile;","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul style={{display: \"flex\", justifyContent: \"center\", marginTop: 50}}>\n                <li>\n                    <Link to=\"/\" style={{marginRight: 10}}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\"/>\n                    </Link>\n                </li>\n                <li>\n                    <Link \n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\"/>\n                        <span style={{marginTop: 10}}>\n                            {\n                                userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"\n                            }\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    )\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\"\nimport Profile from \"routes/Profile\"\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                    }}>\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </div>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport {authService} from \"fbase\"\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect( () => {\n    authService.onAuthStateChanged( (user) => {\n      if (user) {\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    })\n  }\n\n  return (\n    <>\n      {init ? (\n          <AppRouter \n            isLoggedIn={Boolean(userObj)} \n            userObj={userObj} \n            refreshUser={refreshUser}\n          /> \n        ) : (\n            \"initializing...\"\n        )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}